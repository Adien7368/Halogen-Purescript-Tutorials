// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["115909502"] = [{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/halogen-vdom/v6.1.3/src/Halogen/VDom/Util.purs","end":[60,46]},"score":1,"packageInfo":{"values":["halogen-vdom"],"tag":"Package"},"name":"unsafeFreeze","moduleName":"Halogen.VDom.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object","ST"],"STObject"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/halogen-vdom/v6.1.3/src/Halogen/VDom/Thunk.purs","end":[80,34]},"score":1,"packageInfo":{"values":["halogen-vdom"],"tag":"Package"},"name":"runThunk","moduleName":"Halogen.VDom.Thunk","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","VDom","Thunk"],"Thunk"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query.purs","end":[81,42]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"request","moduleName":"Halogen.Query","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Query"],"Request"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Takes a data constructor of query algebra `f` and creates a request query.\n\nFor example:\n\n```purescript\ndata Query a = GetTickCount (Int -> a)\n\ngetTickCount :: forall o. H.HalogenIO Query o Aff -> Aff (Maybe Int)\ngetTickCount app = app.query (H.request GetTickCount)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query/EventSource.purs","end":[142,43]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"close","moduleName":"Halogen.Query.EventSource","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Query","EventSource"],"Emitter"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Closes the emitter, shutting down the event source. This allows an event\nsource to stop itself internally, rather than requiring external shutdown\nby unsubscribing from it.\n\nThe event source will automatically be unsubscribed from when this is\ncalled, and the finalizer returned during event source setup will be\nexecuted.\n\nAny further calls to `emit` after `close` will be ignored.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/free/v5.2.0/src/Data/Yoneda.purs","end":[67,45]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"lowerYoneda","moduleName":"Data.Yoneda","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lower a value of type `Yoneda f a` to the type constructor `f`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/nonempty/v5.0.0/src/Data/NonEmpty.purs","end":[64,40]},"score":5,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"tail","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get everything but the 'first' element of a non-empty container.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/nonempty/v5.0.0/src/Data/NonEmpty.purs","end":[56,58]},"score":5,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"oneOf","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map.purs","end":[12,37]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"keys","moduleName":"Data.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"k"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[612,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[612,40]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"values","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"v"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a list of the values contained in a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[606,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[606,38]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"keys","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"k"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a list of the keys contained in a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[291,1],"name":".spago/either/v4.1.1/src/Data/Either.purs","end":[291,42]},"score":16,"packageInfo":{"values":["either"],"tag":"Package"},"name":"hush","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turns an `Either` into a `Maybe`, by throwing eventual `Left` values away and converting\nthem into `Nothing`. `Right` values get turned into `Just`s.\n\n```purescript\nhush (Left \"ParseError\") = Nothing\nhush (Right 42) = Just 42\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/transformers/v4.2.0/src/Control/Monad/List/Trans.purs","end":[80,64]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"runListTRec","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drain a `ListT`, running it to completion and discarding all values.\nStack safe: Uses tail call optimization.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/transformers/v4.2.0/src/Control/Monad/List/Trans.purs","end":[75,55]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"runListT","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drain a `ListT`, running it to completion and discarding all values.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/coroutines/v5.0.1/src/Control/Coroutine.purs","end":[57,59]},"score":1,"packageInfo":{"values":["coroutines"],"tag":"Package"},"name":"runProcess","moduleName":"Control.Coroutine","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"Process"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a `Process` to completion.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/freeap/v5.0.1/src/Control/Applicative/Free.purs","end":[112,64]},"score":1,"packageInfo":{"values":["freeap"],"tag":"Package"},"name":"retractFreeAp","moduleName":"Control.Applicative.Free","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative","Free"],"FreeAp"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a free applicative functor using the applicative instance for\nthe type constructor `f`.\n"}],"tag":"SearchResult"}]