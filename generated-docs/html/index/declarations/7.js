// This file was generated by purescript-docs-search.
window.DocsSearchIndex["7"] = [["p_",[{"values":[{"sourceSpan":{"start":[611,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[611,47]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"p_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["name",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/exceptions/v4.0.0/src/Effect/Exception.purs","end":[38,39]},"score":6,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"name","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the error name when defined, or fallback to 'Error'\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[186,59]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"name","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/DocumentType.purs","end":[30,46]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"name","moduleName":"Web.DOM.DocumentType","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DocumentType"],"DocumentType"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/web-file/v2.3.0/src/Web/File/File.purs","end":[16,38]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"name","moduleName":"Web.File.File","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","File"],"File"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLButtonElement.purs","end":[131,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLButtonElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLFieldSetElement.purs","end":[97,60]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLFieldSetElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFieldSetElement"],"HTMLFieldSetElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLFormElement.purs","end":[74,56]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLIFrameElement.purs","end":[94,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLIFrameElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLIFrameElement"],"HTMLIFrameElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLInputElement.purs","end":[248,57]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLKeygenElement.purs","end":[114,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLKeygenElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMapElement.purs","end":[58,55]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLMapElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMapElement"],"HTMLMapElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMetaElement.purs","end":[57,56]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLMetaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMetaElement"],"HTMLMetaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLObjectElement.purs","end":[106,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLObjectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLOutputElement.purs","end":[99,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLOutputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOutputElement"],"HTMLOutputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLParamElement.purs","end":[56,57]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLParamElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLParamElement"],"HTMLParamElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLSelectElement.purs","end":[120,58]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[156,60]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"name","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nameditem",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/HTMLCollection.purs","end":[32,64]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"namedItem","moduleName":"Web.DOM.HTMLCollection","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The first element with the specified name or ID in a HTMLCollection, or\nNothing if no such element exists.\n"}],"tag":"SearchResult"}]],["namespace",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/halogen-vdom/v6.1.3/src/Halogen/VDom/Types.purs","end":[100,37]},"score":1,"packageInfo":{"values":["halogen-vdom"],"tag":"Package"},"name":"Namespace","moduleName":"Halogen.VDom.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["halogen-vdom"],"tag":"Package"},"name":"Namespace","moduleName":"Halogen.VDom.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["namespaceuri",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[86,40]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"namespaceURI","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nan",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[24,29]},"score":2,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"nan","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Not a number (NaN)\n"}],"tag":"SearchResult"}]],["naturalheight",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLImageElement.purs","end":[82,63]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"naturalHeight","moduleName":"Web.HTML.HTMLImageElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["naturaltransformation",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/prelude/v4.1.1/src/Data/NaturalTransformation.purs","end":[17,54]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NaturalTransformation","moduleName":"Data.NaturalTransformation","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},null]},"arguments":[["f",null],["g",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type for natural transformations.\n\nA natural transformation is a mapping between type constructors of kind\n`Type -> Type` where the mapping operation has no ability to manipulate the\ninner values.\n\nAn example of this is the `fromFoldable` function provided in\n`purescript-lists`, where some foldable structure containing values of\ntype `a` is converted into a `List a`.\n\nThe definition of a natural transformation in category theory states that\n`f` and `g` should be functors, but the `Functor` constraint is not\nenforced here; that the types are of kind `Type -> Type` is enough for our\npurposes.\n"}],"tag":"SearchResult"}]],["naturalwidth",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLImageElement.purs","end":[81,62]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"naturalWidth","moduleName":"Web.HTML.HTMLImageElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nav",[{"values":[{"sourceSpan":{"start":[566,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[566,38]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"nav","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLnav"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nav_",[{"values":[{"sourceSpan":{"start":[569,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[569,49]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"nav_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["navigator",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Navigator.purs","end":[5,38]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Navigator","moduleName":"Web.HTML.Navigator","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Window.purs","end":[60,55]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"navigator","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Navigator"],"Navigator"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lcm",[{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/prelude/v4.1.1/src/Data/EuclideanRing.purs","end":[94,56]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"lcm","moduleName":"Data.EuclideanRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The *least common multiple* of two values.\n"}],"tag":"SearchResult"}]],["lcmap",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor.purs","end":[26,68]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"lcmap","moduleName":"Data.Profunctor","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Map a function over the (contravariant) first type argument only.\n"}],"tag":"SearchResult"}]],["if",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[72,39]},"score":1,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"If","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["bool","onTrue","onFalse"],["output"]]],"arguments":[["bool",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}],["onTrue",{"tag":"NamedKind","contents":[["Prim"],"Type"]}],["onFalse",{"tag":"NamedKind","contents":[["Prim"],"Type"]}],["output",{"tag":"NamedKind","contents":[["Prim"],"Type"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"If - dispatch based on a boolean\n"}],"tag":"SearchResult"}]],["if_",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[76,79]},"score":1,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"if_","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"If"],"constraintArgs":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ifm",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/prelude/v4.1.1/src/Control/Bind.purs","end":[115,60]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"ifM","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Execute a monadic action if a condition holds.\n\nFor example:\n\n```purescript\nmain = ifM ((< 0.5) <$> random)\n         (trace \"Heads\")\n         (trace \"Tails\")\n```\n"}],"tag":"SearchResult"}]],["iframe",[{"values":[{"sourceSpan":{"start":[485,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[485,44]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"iframe","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Leaf"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLiframe"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["h5",[{"values":[{"sourceSpan":{"start":[443,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[443,36]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"h5","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLh5"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["h5_",[{"values":[{"sourceSpan":{"start":[446,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[446,48]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"h5_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["fiber",[{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/aff/v5.1.2/src/Effect/Aff.purs","end":[164,4]},"score":5,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"Fiber","moduleName":"Effect.Aff","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Represents a forked computation by way of `forkAff`. `Fiber`s are\nmemoized, so their results are only computed once.\n"}],"tag":"SearchResult"}]],["fibercanceler",[{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/aff/v5.1.2/src/Effect/Aff.purs","end":[211,40]},"score":5,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"fiberCanceler","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Canceler"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A canceler from a Fiber.\n"}],"tag":"SearchResult"}]],["field",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/prelude/v4.1.1/src/Data/Field.purs","end":[39,51]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Field","moduleName":"Data.Field","info":{"values":[{"superclasses":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Field` class is for types that are (commutative) fields.\n\nMathematically, a field is a ring which is commutative and in which every\nnonzero element has a multiplicative inverse; these conditions correspond\nto the `CommutativeRing` and `DivisionRing` classes in PureScript\nrespectively. However, the `Field` class has `EuclideanRing` and\n`DivisionRing` as superclasses, which seems like a stronger requirement\n(since `CommutativeRing` is a superclass of `EuclideanRing`). In fact, it\nis not stronger, since any type which has law-abiding `CommutativeRing`\nand `DivisionRing` instances permits exactly one law-abiding\n`EuclideanRing` instance. We use a `EuclideanRing` superclass here in\norder to ensure that a `Field` constraint on a function permits you to use\n`div` on that type, since `div` is a member of `EuclideanRing`.\n\nThis class has no laws or members of its own; it exists as a convenience,\nso a single constraint can be used when field-like behaviour is expected.\n\nThis module also defines a single `Field` instance for any type which has\nboth `EuclideanRing` and `DivisionRing` instances. Any other instance\nwould overlap with this instance, so no other `Field` instances should be\ndefined in libraries. Instead, simply define `EuclideanRing` and\n`DivisionRing` instances, and this will permit your type to be used with a\n`Field` constraint.\n"}],"tag":"SearchResult"}]],["fieldset",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements/Keyed.purs","end":[64,53]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"fieldset","moduleName":"Halogen.HTML.Elements.Keyed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements","Keyed"],"KeyedNode"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLfieldset"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[389,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[389,48]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"fieldset","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLfieldset"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["fieldset_",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements/Keyed.purs","end":[67,69]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"fieldset_","moduleName":"Halogen.HTML.Elements.Keyed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[392,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[392,54]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"fieldset_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["figcaption",[{"values":[{"sourceSpan":{"start":[395,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[395,52]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"figcaption","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLfigcaption"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["figcaption_",[{"values":[{"sourceSpan":{"start":[398,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[398,56]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"figcaption_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["figure",[{"values":[{"sourceSpan":{"start":[401,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[401,44]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"figure","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLfigure"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["figure_",[{"values":[{"sourceSpan":{"start":[404,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[404,52]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"figure_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["file",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-file/v2.3.0/src/Web/File/File.purs","end":[11,33]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"File","moduleName":"Web.File.File","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["filelist",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/web-file/v2.3.0/src/Web/File/FileList.purs","end":[16,37]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"FileList","moduleName":"Web.File.FileList","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["filename",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/ErrorEvent.purs","end":[18,48]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"fileName","moduleName":"Web.HTML.Event.ErrorEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","ErrorEvent"],"ErrorEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["filereader",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/web-file/v2.3.0/src/Web/File/FileReader.purs","end":[27,39]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"FileReader","moduleName":"Web.File.FileReader","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/web-file/v2.3.0/src/Web/File/FileReader.purs","end":[35,47]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"fileReader","moduleName":"Web.File.FileReader","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","File","FileReader"],"FileReader"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["files",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/DataTransfer.purs","end":[27,40]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"files","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DataTransfer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","File","FileList"],"FileList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Contains a list of all the local files available on the data transfer.\nEmpty if the drag operation doesn't involve dragging files.\n\nIt's possible that a drag operation may have null files, instead of an\nempty file list. In these cases Nothing is returned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[202,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLInputElement.purs","end":[202,53]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"files","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","File","FileList"],"FileList"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["filled",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"Filled","moduleName":"Effect.AVar","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["filter",[{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/transformers/v4.2.0/src/Control/Monad/List/Trans.purs","end":[174,76]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"filter","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Remove elements from a list for which a predicate fails to hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[281,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[281,65]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"filter","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[587,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[587,72]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"filter","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter an array, keeping the elements which satisfy a predicate function,\ncreating a new array.\n\n```purescript\nfilter (_ > 0) [-1, 4, -5, 7] = [4, 7]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[425,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[425,55]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filter","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter a list, keeping the elements which satisfy a predicate function.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[210,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[210,65]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filter","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[387,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[387,55]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filter","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter a list, keeping the elements which satisfy a predicate function.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[680,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[680,68]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"filter","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\non the value fails to hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Set/NonEmpty.purs","end":[155,70]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"filter","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those values of a set for which a predicate on the value fails\nto hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Set.purs","end":[186,62]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"filter","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those values of a set for which a predicate on the value fails\nto hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/foreign-object/v2.0.3/src/Foreign/Object.purs","end":[298,59]},"score":1,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"filter","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\non the value fails to hold.\n"}],"tag":"SearchResult"}]],["filtera",[{"values":[{"sourceSpan":{"start":[291,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[296,17]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"filterA","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[609,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[609,83]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"filterA","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter where the predicate returns a `Boolean` in some `Applicative`.\n\n```purescript\npowerSet :: forall a. Array a -> Array (Array a)\npowerSet = filterA (const [true, false])\n```\n"}],"tag":"SearchResult"}]],["filtered",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/gen/v2.1.1/src/Control/Monad/Gen.purs","end":[113,71]},"score":6,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"filtered","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that repeatedly run another generator until it produces\n`Just` node. This will never halt if the input generator always produces `Nothing`.\n"}],"tag":"SearchResult"}]],["filterkeys",[{"values":[{"sourceSpan":{"start":[675,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[675,66]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"filterKeys","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\non the key fails to hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[293,1],"name":".spago/foreign-object/v2.0.3/src/Foreign/Object.purs","end":[293,54]},"score":1,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"filterKeys","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\non the key fails to hold.\n"}],"tag":"SearchResult"}]],["filterm",[{"values":[{"sourceSpan":{"start":[441,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[441,75]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filterM","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter where the predicate returns a monadic `Boolean`.\n\nFor example:\n\n```purescript\npowerSet :: forall a. [a] -> [[a]]\npowerSet = filterM (const [true, false])\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[213,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[213,85]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filterM","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[403,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[403,75]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"filterM","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter where the predicate returns a monadic `Boolean`.\n\nFor example:\n\n```purescript\npowerSet :: forall a. [a] -> [[a]]\npowerSet = filterM (const [true, false])\n```\n"}],"tag":"SearchResult"}]],["filterwithkey",[{"values":[{"sourceSpan":{"start":[669,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[669,80]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"filterWithKey","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\nfails to hold.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[281,1],"name":".spago/foreign-object/v2.0.3/src/Foreign/Object.purs","end":[281,76]},"score":1,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"filterWithKey","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Filter out those key/value pairs of a map for which a predicate\nfails to hold.\n"}],"tag":"SearchResult"}]],["finalize",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query/EventSource.purs","end":[164,44]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"finalize","moduleName":"Halogen.Query.EventSource","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Query","EventSource"],"Finalizer"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Runs a finalizer.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"Finalize","moduleName":"Halogen.Query.HalogenQ","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["finalizer",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query/EventSource.purs","end":[155,41]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"Finalizer","moduleName":"Halogen.Query.EventSource","info":{"values":[{"typeArguments":[["m",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"When setting up an event source, values of this type should be returned to\ndescribe any clean-up operations required. This is just a newtype around\nan effectful operation, but helps with type signature comprehension.\n\nThere is a `Monoid` instance provided for finalizers, so `mempty` can be\nused in cases where there are no relevant clean-up actions to take.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"Finalizer","moduleName":"Halogen.Query.EventSource","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["finally",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/aff/v5.1.2/src/Effect/Aff.purs","end":[273,40]},"score":5,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"finally","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Runs the first effect after the second, regardless of whether it completed\nsuccessfully or the fiber was cancelled.\n"}],"tag":"SearchResult"}]],["find",[{"values":[{"sourceSpan":{"start":[366,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[366,67]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"find","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Try to find an element in a data structure which satisfies a predicate.\n"}],"tag":"SearchResult"}]],["findindex",[{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[245,70]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"findIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[426,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[426,62]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"findIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the first index for which a predicate holds.\n\n```purescript\nfindIndex (contains $ Pattern \"b\") [\"a\", \"bb\", \"b\", \"d\"] = Just 1\nfindIndex (contains $ Pattern \"x\") [\"a\", \"bb\", \"b\", \"d\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[315,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[315,61]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the first index for which a predicate holds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[179,69]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[298,61]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the first index for which a predicate holds.\n"}],"tag":"SearchResult"}]],["findlastindex",[{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[248,74]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"findLastIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[444,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[444,66]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"findLastIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the last index for which a predicate holds.\n\n```purescript\nfindLastIndex (contains $ Pattern \"b\") [\"a\", \"bb\", \"b\", \"d\"] = Just 2\nfindLastIndex (contains $ Pattern \"x\") [\"a\", \"bb\", \"b\", \"d\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[326,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[326,65]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findLastIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the last index for which a predicate holds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[184,73]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findLastIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[307,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[307,65]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"findLastIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the last index for which a predicate holds.\n"}],"tag":"SearchResult"}]],["findmap",[{"values":[{"sourceSpan":{"start":[373,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[373,72]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"findMap","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Try to find an element in a data structure which satisfies a predicate mapping.\n"}],"tag":"SearchResult"}]],["findmax",[{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[286,65]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"findMax","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["key",{"tag":"TypeVar","contents":"k"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"v"},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the pair with the greatest key\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Set.purs","end":[135,38]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"findMax","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["findmin",[{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Map/Internal.purs","end":[294,65]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"findMin","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["key",{"tag":"TypeVar","contents":"k"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"v"},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the pair with the least key\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/ordered-collections/v1.6.1/src/Data/Set.purs","end":[132,38]},"score":2,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"findMin","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["findwithindex",[{"values":[{"sourceSpan":{"start":[266,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/FoldableWithIndex.purs","end":[271,38]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"findWithIndex","moduleName":"Data.FoldableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["index",{"tag":"TypeVar","contents":"i"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Try to find an element in a data structure which satisfies a predicate\nwith access to the index.\n"}],"tag":"SearchResult"}]],["first",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/maybe/v4.0.1/src/Data/Maybe/First.purs","end":[21,34]},"score":26,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"First","moduleName":"Data.Maybe.First","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid returning the first (left-most) non-`Nothing` value.\n\n``` purescript\nFirst (Just x) <> First (Just y) == First (Just x)\nFirst Nothing <> First (Just y) == First (Just y)\nFirst Nothing <> Nothing == First Nothing\nmempty :: First _ == First Nothing\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":26,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"First","moduleName":"Data.Maybe.First","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor/Strong.purs","end":[29,60]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"first","moduleName":"Data.Profunctor.Strong","info":{"values":[{"typeClassArguments":[["p",null]],"typeClass":[["Data","Profunctor","Strong"],"Strong"],"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Strong"],"Strong"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/prelude/v4.1.1/src/Data/Semigroup/First.purs","end":[13,26]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"First","moduleName":"Data.Semigroup.First","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Semigroup where `append` always takes the first option.\n\n``` purescript\nFirst x <> First y == First x\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"First","moduleName":"Data.Semigroup.First","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["firstchild",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Node.purs","end":[100,42]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"firstChild","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The first child of the node, or Nothing if the node has no children.\n"}],"tag":"SearchResult"}]],["firstelementchild",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/ParentNode.purs","end":[28,58]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"firstElementChild","moduleName":"Web.DOM.ParentNode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The first child that is an element, or Nothing if no such element exists.\n"}],"tag":"SearchResult"}]],["fix",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[22,41]},"score":18,"packageInfo":{"values":["control"],"tag":"Package"},"name":"fix","moduleName":"Control.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["l",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Lazy"],"Lazy"],"constraintArgs":[{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"l"}]},{"tag":"TypeVar","contents":"l"}]}}]},{"tag":"TypeVar","contents":"l"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`fix` defines a value as the fixed point of a function.\n\nThe `Lazy` instance allows us to generate the result lazily.\n"}],"tag":"SearchResult"}]],["clamp",[{"values":[{"sourceSpan":{"start":[180,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[180,45]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"clamp","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clamp a value between a minimum and a maximum. For example:\n\n``` purescript\nlet f = clamp 0 10\nf (-5) == 0\nf 5    == 5\nf 15   == 10\n```\n"}],"tag":"SearchResult"}]],["class_",[{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[153,65]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"class_","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"ClassName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["class",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["classes",[{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[156,72]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"classes","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"ClassName"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["class",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["classlist",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[100,59]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"classList","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DOMTokenList"],"DOMTokenList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLElement.purs","end":[114,63]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"classList","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DOMTokenList"],"DOMTokenList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["classname",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Core.purs","end":[189,37]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"ClassName","moduleName":"Halogen.HTML.Core","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A wrapper for strings which are used as CSS classes.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"ClassName","moduleName":"Halogen.HTML.Core","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[99,53]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"className","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLElement.purs","end":[111,57]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"className","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clear",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/console/v4.4.0/src/Effect/Class/Console.purs","end":[42,43]},"score":33,"packageInfo":{"values":["console"],"tag":"Package"},"name":"clear","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/console/v4.4.0/src/Effect/Console.purs","end":[58,36]},"score":33,"packageInfo":{"values":["console"],"tag":"Package"},"name":"clear","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clears the console\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/web-storage/v3.0.0/src/Web/Storage/Storage.purs","end":[70,47]},"score":1,"packageInfo":{"values":["web-storage"],"tag":"Package"},"name":"clear","moduleName":"Web.Storage.Storage","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Storage","Storage"],"Storage"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clears all keys from the storage.\n"}],"tag":"SearchResult"}]],["click",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/EventTypes.purs","end":[29,19]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"click","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLElement.purs","end":[132,51]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"click","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-uievents/v2.0.0/src/Web/UIEvent/MouseEvent/EventTypes.purs","end":[5,19]},"score":2,"packageInfo":{"values":["web-uievents"],"tag":"Package"},"name":"click","moduleName":"Web.UIEvent.MouseEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clientheight",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[132,56]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"clientHeight","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clientleft",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[130,54]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"clientLeft","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clienttop",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[129,53]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"clientTop","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clientwidth",[{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Element.purs","end":[131,55]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"clientWidth","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clientx",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/web-touchevents/v2.0.0/src/Web/TouchEvent/Touch.purs","end":[13,39]},"score":1,"packageInfo":{"values":["web-touchevents"],"tag":"Package"},"name":"clientX","moduleName":"Web.TouchEvent.Touch","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","TouchEvent","Touch"],"Touch"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/web-uievents/v2.0.0/src/Web/UIEvent/MouseEvent.purs","end":[52,44]},"score":2,"packageInfo":{"values":["web-uievents"],"tag":"Package"},"name":"clientX","moduleName":"Web.UIEvent.MouseEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","UIEvent","MouseEvent"],"MouseEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clienty",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/web-touchevents/v2.0.0/src/Web/TouchEvent/Touch.purs","end":[15,39]},"score":1,"packageInfo":{"values":["web-touchevents"],"tag":"Package"},"name":"clientY","moduleName":"Web.TouchEvent.Touch","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","TouchEvent","Touch"],"Touch"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/web-uievents/v2.0.0/src/Web/UIEvent/MouseEvent.purs","end":[54,44]},"score":2,"packageInfo":{"values":["web-uievents"],"tag":"Package"},"name":"clientY","moduleName":"Web.UIEvent.MouseEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","UIEvent","MouseEvent"],"MouseEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clipboardchange",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-clipboard/v2.0.0/src/Web/Clipboard/ClipboardEvent/EventTypes.purs","end":[5,29]},"score":1,"packageInfo":{"values":["web-clipboard"],"tag":"Package"},"name":"clipboardchange","moduleName":"Web.Clipboard.ClipboardEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clipboarddata",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/web-clipboard/v2.0.0/src/Web/Clipboard/ClipboardEvent.purs","end":[25,54]},"score":1,"packageInfo":{"values":["web-clipboard"],"tag":"Package"},"name":"clipboardData","moduleName":"Web.Clipboard.ClipboardEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Clipboard","ClipboardEvent"],"ClipboardEvent"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DataTransfer"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clipboardevent",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/web-clipboard/v2.0.0/src/Web/Clipboard/ClipboardEvent.purs","end":[17,43]},"score":1,"packageInfo":{"values":["web-clipboard"],"tag":"Package"},"name":"ClipboardEvent","moduleName":"Web.Clipboard.ClipboardEvent","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["clipboardevents",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/dom-indexed/v7.0.0/src/DOM/HTML/Indexed.purs","end":[126,4]},"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"ClipboardEvents","moduleName":"DOM.HTML.Indexed","info":{"values":[{"type":{"tag":"RCons","contents":["onCopy",{"tag":"TypeConstructor","contents":[["Web","Clipboard","ClipboardEvent"],"ClipboardEvent"]},{"tag":"RCons","contents":["onCut",{"tag":"TypeConstructor","contents":[["Web","Clipboard","ClipboardEvent"],"ClipboardEvent"]},{"tag":"RCons","contents":["onPaste",{"tag":"TypeConstructor","contents":[["Web","Clipboard","ClipboardEvent"],"ClipboardEvent"]},{"tag":"TypeVar","contents":"r"}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["clone",[{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Node.purs","end":[150,44]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"clone","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clones the node without cloning the node's descendants.\n"}],"tag":"SearchResult"}]],["close",[{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query/EventSource.purs","end":[142,43]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"close","moduleName":"Halogen.Query.EventSource","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Query","EventSource"],"Emitter"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Closes the emitter, shutting down the event source. This allows an event\nsource to stop itself internally, rather than requiring external shutdown\nby unsubscribing from it.\n\nThe event source will automatically be unsubscribed from when this is\ncalled, and the finalizer returned during event source setup will be\nexecuted.\n\nAny further calls to `emit` after `close` will be ignored.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/EventTypes.purs","end":[32,19]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"close","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["closed",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor/Closed.purs","end":[9,55]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Closed","moduleName":"Data.Profunctor.Closed","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]}],"fundeps":[],"arguments":[["p",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Closed` class extends the `Profunctor` class to work with functions.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,3],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor/Closed.purs","end":[9,55]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"closed","moduleName":"Data.Profunctor.Closed","info":{"values":[{"typeClassArguments":[["p",null]],"typeClass":[["Data","Profunctor","Closed"],"Closed"],"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["x",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Closed"],"Closed"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["clown",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/bifunctors/v4.0.0/src/Data/Bifunctor/Clown.purs","end":[12,34]},"score":10,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"Clown","moduleName":"Data.Bifunctor.Clown","info":{"values":[{"typeArguments":[["f",null],["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Make a `Functor` over the first argument of a `Bifunctor`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"Clown","moduleName":"Data.Bifunctor.Clown","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor/Clown.purs","end":[10,34]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Clown","moduleName":"Data.Profunctor.Clown","info":{"values":[{"typeArguments":[["f",null],["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Makes a trivial `Profunctor` for a `Contravariant` functor.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Clown","moduleName":"Data.Profunctor.Clown","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["analyzefreeap",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/freeap/v5.0.1/src/Control/Applicative/Free.purs","end":[121,83]},"score":1,"packageInfo":{"values":["freeap"],"tag":"Package"},"name":"analyzeFreeAp","moduleName":"Control.Applicative.Free","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"m"}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Applicative","Free"],"FreeAp"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Perform monoidal analysis over the free applicative functor `f`.\n"}],"tag":"SearchResult"}]],["and",[{"values":[{"sourceSpan":{"start":[306,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[306,62]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"and","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The conjunction of all the values in a data structure. When specialized\nto `Boolean`, this function will test whether all of the values in a data\nstructure are `true`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/integers/v4.0.0/src/Data/Int/Bits.purs","end":[13,40]},"score":7,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"and","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise AND.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[39,28]},"score":1,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"And","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["output"]]],"arguments":[["lhs",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}],["rhs",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}],["output",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"And two `Boolean` types together\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[43,67]},"score":1,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"and","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["l",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"And"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["anonymous",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"Anonymous","moduleName":"DOM.HTML.Indexed.CrossOriginValue","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["any",[{"values":[{"sourceSpan":{"start":[322,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[322,76]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"any","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`any f` is the same as `or <<< map f`; map a function over the structure,\nand then get the disjunction of the results.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"Any","moduleName":"DOM.HTML.Indexed.StepValue","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["anywithindex",[{"values":[{"sourceSpan":{"start":[255,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/FoldableWithIndex.purs","end":[261,7]},"score":19,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"anyWithIndex","moduleName":"Data.FoldableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`anyWithIndex f` is the same as `or <<< mapWithIndex f`; map a function over the\nstructure, and then get the disjunction of the results.\n"}],"tag":"SearchResult"}]],["</\\>",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/functors/v3.1.1/src/Data/Functor/Product/Nested.purs","end":[31,25]},"score":2,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"(</\\>)","moduleName":"Data.Functor.Product.Nested","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/functors/v3.1.1/src/Data/Functor/Product/Nested.purs","end":[32,30]},"score":2,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"type (</\\>)","moduleName":"Data.Functor.Product.Nested","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]]]