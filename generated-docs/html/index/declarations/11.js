// This file was generated by purescript-docs-search.
window.DocsSearchIndex["11"] = [["radians",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[6,22]},"score":4,"packageInfo":{"values":["math"],"tag":"Package"},"name":"Radians","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An alias to make types in this module more explicit.\n"}],"tag":"SearchResult"}]],["radix",[{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[170,26]},"score":6,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Radix","moduleName":"Data.Int","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The number of unique digits (including zero) used to represent integers in\na specific base.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[193,28]},"score":6,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"radix","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Radix` from a number between 2 and 36.\n"}],"tag":"SearchResult"}]],["raise",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"Raise","moduleName":"Halogen.Query.HalogenM","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"output"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/halogen/v5.1.1/src/Halogen/Query/HalogenM.purs","end":[127,97]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"raise","moduleName":"Halogen.Query.HalogenM","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["output",{"tag":"ForAll","contents":["slots",{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"output"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeVar","contents":"slots"}]},{"tag":"TypeVar","contents":"output"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Raises an output message for the component.\n"}],"tag":"SearchResult"}]],["range",[{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[174,41]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"range","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[174,48]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"range","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an array containing a range of integers, including both endpoints.\n```purescript\nrange 2 5 = [2, 3, 4, 5]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[145,32]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"range","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list containing a range of integers, including both endpoints.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[144,32]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"range","moduleName":"Data.List","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list containing a range of integers, including both endpoints.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/unfoldable/v4.1.0/src/Data/Unfoldable1.purs","end":[107,56]},"score":10,"packageInfo":{"values":["unfoldable"],"tag":"Package"},"name":"range","moduleName":"Data.Unfoldable1","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an `Unfoldable1` containing a range of values, including both\nendpoints.\n\n``` purescript\nrange 0 0 == (NEL.singleton 0 :: NEL.NonEmptyList Int)\nrange 1 2 == (NEL.cons 1 (NEL.singleton 2) :: NEL.NonEmptyList Int)\nrange 2 0 == (NEL.cons 2 (NEL.cons 1 (NEL.singleton 0)) :: NEL.NonEmptyList Int)\n```\n"}],"tag":"SearchResult"}]],["rangeoverflow",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/ValidityState.purs","end":[39,49]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rangeOverflow","moduleName":"Web.HTML.ValidityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","ValidityState"],"ValidityState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rangeunderflow",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/ValidityState.purs","end":[36,50]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rangeUnderflow","moduleName":"Web.HTML.ValidityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","ValidityState"],"ValidityState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["odd",[{"values":[{"sourceSpan":null,"score":6,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Odd","moduleName":"Data.Int","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[165,22]},"score":6,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"odd","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n"}],"tag":"SearchResult"}]],["negate",[{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/prelude/v4.1.1/src/Data/Ring.purs","end":[43,37]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"negate","moduleName":"Data.Ring","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`negate x` can be used as a shorthand for `zero - x`.\n"}],"tag":"SearchResult"}]],["negateduration",[{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/datetime/v4.1.1/src/Data/Time/Duration.purs","end":[98,49]},"score":4,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"negateDuration","moduleName":"Data.Time.Duration","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Negates a duration, turning a positive duration negative or a negative\nduration positive.\n"}],"tag":"SearchResult"}]],["nelcons",[{"values":[{"sourceSpan":{"start":[194,1],"name":".spago/lists/v5.4.1/src/Data/List/Types.purs","end":[194,59]},"score":6,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"nelCons","moduleName":"Data.List.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nes",[{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[32,36]},"score":2,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"nes","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeClassArguments":[["s",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}]],"typeClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"type":{"tag":"ForAll","contents":["s",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","String","NonEmpty","Internal"],"MakeNonEmpty"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Symbol"],"SProxy"]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["networkstate",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMediaElement/NetworkState.purs","end":[11,13]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"NetworkState","moduleName":"Web.HTML.HTMLMediaElement.NetworkState","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMediaElement.purs","end":[130,56]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"networkState","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement","NetworkState"],"NetworkState"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["never",[{"values":[{"sourceSpan":{"start":[102,3],"name":".spago/fork/v4.0.0/src/Control/Monad/Fork/Class.purs","end":[102,19]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"never","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"typeClassArguments":[["e",null],["f",null],["m",null]],"typeClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[259,1],"name":".spago/aff/v5.1.2/src/Effect/Aff.purs","end":[259,19]},"score":5,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"never","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An async computation which does not resolve.\n"}],"tag":"SearchResult"}]],["new",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/st/v4.1.1/src/Control/Monad/ST/Internal.purs","end":[93,56]},"score":3,"packageInfo":{"values":["st"],"tag":"Package"},"name":"new","moduleName":"Control.Monad.ST.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"STRef"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new mutable reference.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/avar/v3.0.0/src/Effect/Aff/AVar.purs","end":[24,28]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"new","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a fresh AVar with an initial value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/avar/v3.0.0/src/Effect/AVar.purs","end":[40,31]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"new","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a fresh AVar with an initial value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/refs/v4.1.0/src/Effect/Ref.purs","end":[18,52]},"score":4,"packageInfo":{"values":["refs"],"tag":"Package"},"name":"new","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new mutable reference containing the specified value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/foreign-object/v2.0.3/src/Foreign/Object/ST.purs","end":[28,54]},"score":1,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"new","moduleName":"Foreign.Object.ST","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object","ST"],"STObject"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new, empty mutable object\n"}],"tag":"SearchResult"}]],["newmutmap",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/halogen-vdom/v6.1.3/src/Halogen/VDom/Util.purs","end":[51,41]},"score":1,"packageInfo":{"values":["halogen-vdom"],"tag":"Package"},"name":"newMutMap","moduleName":"Halogen.VDom.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object","ST"],"STObject"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["newtype",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/newtype/v3.0.0/src/Data/Newtype.purs","end":[38,19]},"score":21,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"Newtype","moduleName":"Data.Newtype","info":{"values":[{"superclasses":[],"fundeps":[[["t"],["a"]]],"arguments":[["t",null],["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A type class for `newtype`s to enable convenient wrapping and unwrapping,\nand the use of the other functions in this module.\n\nThe compiler can derive instances of `Newtype` automatically:\n\n``` purescript\nnewtype EmailAddress = EmailAddress String\n\nderive instance newtypeEmailAddress :: Newtype EmailAddress _\n```\n\nNote that deriving for `Newtype` instances requires that the type be\ndefined as `newtype` rather than `data` declaration (even if the `data`\nstructurally fits the rules of a `newtype`), and the use of a wildcard for\nthe wrapped type.\n\nInstances must obey the following laws:\n``` purescript\nunwrap <<< wrap = id\nwrap <<< unwrap = id\n```\n"}],"tag":"SearchResult"}]],["newurl",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/HashChangeEvent.purs","end":[18,51]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"newURL","moduleName":"Web.HTML.Event.HashChangeEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","HashChangeEvent"],"HashChangeEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["newvalue",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/web-storage/v3.0.0/src/Web/Storage/Event/StorageEvent.purs","end":[41,41]},"score":1,"packageInfo":{"values":["web-storage"],"tag":"Package"},"name":"newValue","moduleName":"Web.Storage.Event.StorageEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Storage","Event","StorageEvent"],"StorageEvent"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["next",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/arrays/v5.3.1/src/Data/Array/ST/Iterator.purs","end":[48,51]},"score":5,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"next","moduleName":"Data.Array.ST.Iterator","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST","Iterator"],"Iterator"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the next item out of an iterator, advancing it. Returns Nothing if the\nIterator is exhausted.\n"}],"tag":"SearchResult"}]],["nextelementsibling",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/NonDocumentTypeChildNode.purs","end":[23,73]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nextElementSibling","moduleName":"Web.DOM.NonDocumentTypeChildNode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","NonDocumentTypeChildNode"],"NonDocumentTypeChildNode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The next sibling that is an element, or Nothing if no such element exists.\n"}],"tag":"SearchResult"}]],["nextsibling",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/MutationRecord.purs","end":[49,53]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nextSibling","moduleName":"Web.DOM.MutationRecord","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationRecord"],"MutationRecord"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Node.purs","end":[119,43]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nextSibling","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The next sibling node, or Nothing if there is no next sibling.\n"}],"tag":"SearchResult"}]],["global",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/st/v4.1.1/src/Control/Monad/ST/Global.purs","end":[14,37]},"score":3,"packageInfo":{"values":["st"],"tag":"Package"},"name":"Global","moduleName":"Control.Monad.ST.Global","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Control","Monad","ST","Internal"],"Region"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"This region allows `ST` computations to be converted into `Effect`\ncomputations so they can be run in a global context.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/strings/v4.0.2/src/Data/String/Regex/Flags.purs","end":[30,21]},"score":2,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"global","moduleName":"Data.String.Regex.Flags","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Only global flag set to true\n"}],"tag":"SearchResult"}]],["globalattributes",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/dom-indexed/v7.0.0/src/DOM/HTML/Indexed.purs","end":[45,4]},"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"GlobalAttributes","moduleName":"DOM.HTML.Indexed","info":{"values":[{"type":{"tag":"RCons","contents":["id",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["title",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["class",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["style",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["spellcheck",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["draggable",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["lang",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["dir",{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed","DirValue"],"DirValue"]},{"tag":"RCons","contents":["hidden",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["tabIndex",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["accessKey",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["contentEditable",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["globalevents",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/dom-indexed/v7.0.0/src/DOM/HTML/Indexed.purs","end":[50,4]},"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"GlobalEvents","moduleName":"DOM.HTML.Indexed","info":{"values":[{"type":{"tag":"RCons","contents":["onContextMenu",{"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]},{"tag":"TypeVar","contents":"r"}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["globalproperties",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/dom-indexed/v7.0.0/src/DOM/HTML/Indexed.purs","end":[130,60]},"score":1,"packageInfo":{"values":["dom-indexed"],"tag":"Package"},"name":"GlobalProperties","moduleName":"DOM.HTML.Indexed","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"GlobalAttributes"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"GlobalEvents"]},{"tag":"TypeVar","contents":"r"}]}}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["enabled",[{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[245,68]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"enabled","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["disabled",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["encodeuri",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[82,36]},"score":2,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"encodeURI","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI encoding. Returns `Nothing` when given a value with unencodeable\ncharacters.\n"}],"tag":"SearchResult"}]],["encodeuricomponent",[{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[92,45]},"score":2,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"encodeURIComponent","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI component encoding. Returns `Nothing` when given a value with\nunencodeable characters.\n"}],"tag":"SearchResult"}]],["encoding",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLFormElement.purs","end":[68,60]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"encoding","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enctype",[{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[224,71]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"enctype","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["enctype",{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLFormElement.purs","end":[65,59]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"enctype","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["end",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"End","moduleName":"Web.HTML.SelectionMode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["endbyte",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/web-file/v2.3.0/src/Web/File/Blob.purs","end":[66,34]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"EndByte","moduleName":"Web.File.Blob","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An index into the Blob indicating the first byte that will *not* be included\nin the new Blob (i.e. the byte exactly at this index is not included).\nIf you specify a negative value, it's treated as an offset from the end of\nthe string toward the beginning. For example, -10 would be the 10th from\nlast byte in the Blob. The default value is size.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"EndByte","moduleName":"Web.File.Blob","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"ByteIdx"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ended",[{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMediaElement.purs","end":[172,59]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"ended","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["endo",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/prelude/v4.1.1/src/Data/Monoid/Endo.purs","end":[14,32]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Endo","moduleName":"Data.Monoid.Endo","info":{"values":[{"typeArguments":[["c",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup for category endomorphisms.\n\nWhen `c` is instantiated with `->` this composes functions of type\n`a -> a`:\n\n``` purescript\nEndo f <> Endo g == Endo (f <<< g)\n(mempty :: Endo _) == Endo identity\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Endo","moduleName":"Data.Monoid.Endo","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["entitynode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"EntityNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["entityreferencenode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"EntityReferenceNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["enum",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/enums/v4.0.1/src/Data/Enum.purs","end":[52,23]},"score":3,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"Enum","moduleName":"Data.Enum","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type class for enumerations.\n\nLaws:\n- Successor: `all (a < _) (succ a)`\n- Predecessor: `all (_ < a) (pred a)`\n- Succ retracts pred: `pred >=> succ >=> pred = pred`\n- Pred retracts succ: `succ >=> pred >=> succ = succ`\n- Non-skipping succ: `b <= a || any (_ <= b) (succ a)`\n- Non-skipping pred: `a <= b || any (b <= _) (pred a)`\n\nThe retraction laws can intuitively be understood as saying that `succ` is\nthe opposite of `pred`; if you apply `succ` and then `pred` to something,\nyou should end up with what you started with (although of course this\ndoesn't apply if you tried to `succ` the last value in an enumeration and\ntherefore got `Nothing` out).\n\nThe non-skipping laws can intuitively be understood as saying that `succ`\nshouldn't skip over any elements of your type. For example, _without_ the\nnon-skipping laws, it would be permissible to write an `Enum Int` instance\nwhere `succ x = Just (x+2)`, and similarly `pred x = Just (x-2)`.\n"}],"tag":"SearchResult"}]],["enumfromthento",[{"values":[{"sourceSpan":{"start":[205,1],"name":".spago/enums/v4.0.1/src/Data/Enum.purs","end":[205,95]},"score":3,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"enumFromThenTo","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"BoundedEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a sequence of elements from the first value, taking steps\naccording to the difference between the first and second value, up to\n(but not exceeding) the third value.\n\n``` purescript\nenumFromThenTo 0 2 6 = [0, 2, 4, 6]\nenumFromThenTo 0 3 5 = [0, 3]\n```\n\nNote that there is no `BoundedEnum` instance for integers, they're just\nbeing used here for illustrative purposes to help clarify the behaviour.\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n"}],"tag":"SearchResult"}]],["enumfromto",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/enums/v4.0.1/src/Data/Enum.purs","end":[182,67]},"score":3,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"enumFromTo","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["u",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a contiguous sequence of elements from the first value to the\nsecond value (inclusive).\n\n``` purescript\nenumFromTo 0 3 = [0, 1, 2, 3]\nenumFromTo 'c' 'a' = ['c', 'b', 'a']\n```\n\nThe example shows `Array` return values, but the result can be any type\nwith an `Unfoldable1` instance.\n"}],"tag":"SearchResult"}]],["env",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env.purs","end":[24,29]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Env","moduleName":"Control.Comonad.Env","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Env` comonad is a synonym for the `EnvT` comonad transformer, applied\nto the `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env.purs","end":[39,37]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"env","moduleName":"Control.Comonad.Env","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Env"],"Env"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a value in context in the `Env` comonad.\n"}],"tag":"SearchResult"}]],["envt",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Trans.purs","end":[21,42]},"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"EnvT","moduleName":"Control.Comonad.Env.Trans","info":{"values":[{"typeArguments":[["e",null],["w",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The environment comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad with a _global environment_ of\ntype `e`.\n\nThe `ComonadEnv` type class describes the operations supported by this comonad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"EnvT","moduleName":"Control.Comonad.Env.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["doc",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Doc","moduleName":"Prim.TypeError","info":{"values":[],"tag":"ExternKindResult"},"hashAnchor":"k","comments":"`Doc` is the kind of type-level documents.\n\nThis kind is used with the `Fail` and `Warn` type clases.\nBuild up a `Doc` with `Text`, `Quote`, `QuoteLabel`, `Beside`, and `Above`.\n"}],"tag":"SearchResult"}]],["doctype",[{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Document.purs","end":[92,51]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"doctype","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DocumentType"],"DocumentType"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["document",[{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Document.purs","end":[59,37]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"Document","moduleName":"Web.DOM.Document","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Window.purs","end":[58,57]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"document","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument"],"HTMLDocument"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documentelement",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Document.purs","end":[97,54]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"documentElement","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documentfragment",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/DocumentFragment.purs","end":[12,45]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DocumentFragment","moduleName":"Web.DOM.DocumentFragment","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["documentfragmentnode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DocumentFragmentNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documentnode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DocumentNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documenttitle",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/History.purs","end":[11,45]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"DocumentTitle","moduleName":"Web.HTML.History","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"DocumentTitle","moduleName":"Web.HTML.History","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documenttype",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/DocumentType.purs","end":[10,41]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DocumentType","moduleName":"Web.DOM.DocumentType","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["documenttypenode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DocumentTypeNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["documenturi",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Document.purs","end":[86,56]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"documentURI","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["domcontentloaded",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/EventTypes.purs","end":[41,30]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"domcontentloaded","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["domrect",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLElement.purs","end":[143,4]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"DOMRect","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["top",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["right",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["bottom",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["left",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["width",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["height",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["domtokenlist",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/DOMTokenList.purs","end":[17,41]},"score":2,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"DOMTokenList","moduleName":"Web.DOM.DOMTokenList","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["done",[{"values":[{"sourceSpan":null,"score":7,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Done","moduleName":"Control.Monad.List.Trans","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["tailrec"],"tag":"Package"},"name":"Done","moduleName":"Control.Monad.Rec.Class","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"b"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/free/v5.2.0/src/Control/Monad/Trampoline.purs","end":[24,36]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"done","moduleName":"Control.Monad.Trampoline","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Trampoline"],"Trampoline"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return a value immediately\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"DONE","moduleName":"Web.File.FileReader.ReadyState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["down",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/orders/v4.0.0/src/Data/Ord/Down.purs","end":[12,24]},"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Down","moduleName":"Data.Ord.Down","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype wrapper which provides a reversed `Ord` instance. For example:\n\n    sortBy (comparing Down) [1,2,3] = [3,2,1]\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Down","moduleName":"Data.Ord.Down","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["downfrom",[{"values":[{"sourceSpan":{"start":[229,1],"name":".spago/enums/v4.0.1/src/Data/Enum.purs","end":[229,59]},"score":3,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"downFrom","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["u",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Produces all predecessors of an `Enum` value, excluding the start value.\n"}],"tag":"SearchResult"}]],["downfromincluding",[{"values":[{"sourceSpan":{"start":[236,1],"name":".spago/enums/v4.0.1/src/Data/Enum.purs","end":[236,69]},"score":3,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"downFromIncluding","moduleName":"Data.Enum","info":{"values":[{"type":{"tag":"ForAll","contents":["u",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable1"],"Unfoldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"u"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Produces all predecessors of an `Enum` value, including the start value.\n\n`downFromIncluding top` will return all values in an `Enum`, in reverse\norder.\n"}],"tag":"SearchResult"}]],["download",[{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Properties.purs","end":[215,62]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"download","moduleName":"Halogen.HTML.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","contents":["download",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLAnchorElement.purs","end":[60,62]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"download","moduleName":"Web.HTML.HTMLAnchorElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAnchorElement"],"HTMLAnchorElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLAreaElement.purs","end":[69,60]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"download","moduleName":"Web.HTML.HTMLAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAreaElement"],"HTMLAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["area",[{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[224,40]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"area","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Leaf"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLarea"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["areas",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLMapElement.purs","end":[61,64]},"score":3,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"areas","moduleName":"Web.HTML.HTMLMapElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMapElement"],"HTMLMapElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["arr",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/profunctor/v4.1.0/src/Data/Profunctor.purs","end":[34,69]},"score":2,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"arr","moduleName":"Data.Profunctor","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category"],"Category"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lift a pure function into any `Profunctor` which is also a `Category`.\n"}],"tag":"SearchResult"}]],["array",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Array","moduleName":"Prim","info":{"values":[{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"An Array: a data structure supporting efficient random access. In\nthe JavaScript backend, values of this type are represented as JavaScript\nArrays at runtime.\n\nConstruct values using literals:\n\n    x = [1,2,3,4,5] :: Array Int\n"}],"tag":"SearchResult"}]],["article",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements/Keyed.purs","end":[34,51]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"article","moduleName":"Halogen.HTML.Elements.Keyed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements","Keyed"],"KeyedNode"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLarticle"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[227,46]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"article","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","contents":[["DOM","HTML","Indexed"],"HTMLarticle"]}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["article_",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements/Keyed.purs","end":[37,68]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"article_","moduleName":"Halogen.HTML.Elements.Keyed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[230,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[230,53]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"article_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]