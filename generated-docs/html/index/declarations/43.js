// This file was generated by purescript-docs-search.
window.DocsSearchIndex["43"] = [["b_",[{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/halogen/v5.1.1/src/Halogen/HTML/Elements.purs","end":[248,47]},"score":0,"packageInfo":{"values":["halogen"],"tag":"Package"},"name":"b_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["+",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/prelude/v4.1.1/src/Data/Semiring.purs","end":[41,18]},"score":47,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(+)","moduleName":"Data.Semiring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Row.purs","end":[23,28]},"score":1,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"type (+)","moduleName":"Type.Row","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":"Applies a type alias of open rows to a set of rows. The primary use case\nthis operator is as convenient sugar for combining open rows without\nparentheses.\n```purescript\ntype Rows1 r = (a :: Int, b :: String | r)\ntype Rows2 r = (c :: Boolean | r)\ntype Rows3 r = (Rows1 + Rows2 + r)\ntype Rows4 r = (d :: String | Rows1 + Rows2 + r)\n```\n"}],"tag":"SearchResult"}]]]